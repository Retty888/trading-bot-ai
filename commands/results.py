# commands/results.py
from telegram import Update
from telegram.ext import ContextTypes
from performance_evaluator import evaluate_all_signals

async def handle_results(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üìä –û—Ü–µ–Ω–∏–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–∏–≥–Ω–∞–ª–æ–≤...")
    df = evaluate_all_signals()

    total = len(df)
    tp = (df["result"] == "TP").sum()
    sl = (df["result"] == "SL").sum()
    open_ = (df["result"] == "Open").sum()
    error = df["result"].astype(str).str.startswith("Error").sum()

    summary = (
        f"üìà –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞ —Å–∏–≥–Ω–∞–ª–æ–≤:\n\n"
        f"‚úÖ TP: {tp}\n"
        f"‚ùå SL: {sl}\n"
        f"‚è≥ –û—Ç–∫—Ä—ã—Ç—ã–µ: {open_}\n"
        f"‚ö†Ô∏è –û—à–∏–±–∫–∏: {error}\n"
        f"üì¶ –í—Å–µ–≥–æ —Å–∏–≥–Ω–∞–ª–æ–≤: {total}"
    )

    await update.message.reply_text(summary)
