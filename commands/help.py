from telegram import Update
from telegram.ext import ContextTypes

async def handle_help(update: Update, context: ContextTypes.DEFAULT_TYPE):
    help_text = (
        "üìò <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º</b>\n\n"

        "üîπ <b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
        "/start ‚Äî –ó–∞–ø—É—Å–∫ –∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ\n"
        "/help ‚Äî –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º\n"
        "/signals ‚Äî üì∂ –ò–Ω—Ç—Ä–∞–¥–µ–∏-—Å–∏–≥–Ω–∞–ª—ã BTC/ETH (—Ç–∞–π–º—Ñ—Ä–µ–π–º—ã 15m, 30m, 1h)\n"
        "/scalp_btc ‚Äî ‚ö° –°–∫–∞–ª—å–ø–∏–Ω–≥ BTC (–∞–Ω–∞–ª–∏–∑ –Ω–∞ 5m –∏ 15m, –¥–∞–Ω–Ω—ã–µ —Å 1m)\n"
        "/scalp_eth ‚Äî ‚ö° –°–∫–∞–ª—å–ø–∏–Ω–≥ ETH (–∞–Ω–∞–ª–∏–∑ –Ω–∞ 5m –∏ 15m, –¥–∞–Ω–Ω—ã–µ —Å 1m)\n"
        "/swing ‚Äî üìà –°–≤–∏–Ω–≥-–∞–Ω–∞–ª–∏–∑ (–∞–Ω–∞–ª–∏–∑ –Ω–∞ 1h, 4h, 1d)\n"

        "\nüîπ <b>–ê–Ω–∞–ª–∏–∑ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n"
        "/results ‚Äî üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ TP/SL –ø–æ –ø—Ä–æ—à–ª—ã–º —Å–∏–≥–Ω–∞–ª–∞–º\n"
        "/stats ‚Äî üìà –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º\n"
        "/evaluate ‚Äî ü§ñ AI-–∞–Ω–∞–ª–∏–∑ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ —Å–∏–≥–Ω–∞–ª–æ–≤\n"

        "\nüîπ <b>–°–ª—É–∂–µ–±–Ω—ã–µ:</b>\n"
        "/usage ‚Äî üìä –¢–µ–∫—É—â–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤ OpenAI (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ)\n"
        "/news ‚Äî üì∞ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∫—Ä–∏–ø—Ç–æ-–Ω–æ–≤–æ—Å—Ç–∏ (–µ—Å–ª–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ)\n"

        "\nüìä <b>–û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ —Å–∏–≥–Ω–∞–ª–æ–≤</b>:\n"
        "<b>Score</b> ‚Äî —á–∏—Å–ª–æ–≤–æ–π —Ä–µ–π—Ç–∏–Ω–≥ (0‚Äì7), —É—á–∏—Ç—ã–≤–∞—é—â–∏–π:\n"
        "‚Ä¢ EMA –∏ —Ç—Ä–µ–Ω–¥\n"
        "‚Ä¢ MACD –∏–º–ø—É–ª—å—Å\n"
        "‚Ä¢ RSI / StochRSI –∑–æ–Ω—ã\n"
        "‚Ä¢ ADX (—Å–∏–ª–∞ —Ç—Ä–µ–Ω–¥–∞)\n"
        "‚Ä¢ –°–≤–µ—á–Ω–æ–π –ø–∞—Ç—Ç–µ—Ä–Ω (hammer, engulfing –∏ –¥—Ä.)\n"
        "‚Ä¢ –û–±—ä—ë–º –∏ –∑–æ–Ω—ã –∏–Ω—Ç–µ—Ä–µ—Å–∞\n\n"

        "<b>Confidence</b> ‚Äî –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è Score:\n"
        "0 = Very Low\n"
        "1 = Low\n"
        "2 = Medium\n"
        "3 = High\n"
        "4 = Very High\n"
        "5 = Extreme\n"
        "6+ = Ultra\n"
    )

    if update.message:
        await update.message.reply_text(help_text, parse_mode='HTML')
    elif update.callback_query:
        await update.callback_query.message.reply_text(help_text, parse_mode='HTML')
