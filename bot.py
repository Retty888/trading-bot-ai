from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
from performance_evaluator import evaluate_all_signals  # –¥–ª—è –∞–≤—Ç–æ–æ—Ü–µ–Ω–∫–∏
from dotenv import load_dotenv
import os
from telegram import Bot
from utils.signal_result_checker import update_logged_results

# 1. –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–∫–µ–Ω–∞
load_dotenv()
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

# 2. Webhook —É–¥–∞–ª–µ–Ω–∏–µ
async def remove_webhook(app):
    await app.bot.delete_webhook(drop_pending_updates=True)
    print("‚úÖ Webhook —É–¥–∞–ª—ë–Ω.")

# 3. –ò–º–ø–æ—Ä—Ç—ã —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤
from commands.start import handle_start
from commands.help import handle_help
from commands.usage import handle_usage
from commands.signals import handle_signals
from commands.scalp_eth import handle_scalp_eth
from commands.scalp_btc import handle_scalp_btc
from commands.swing import handle_swing
from commands.news import handle_news
from commands.results import handle_results
from commands.evaluate import handle_evaluate
from commands.stats import handle_stats
from commands.altcoin_gem import handle_altcoin_gem

# 4. –û—Ç–ª–∞–¥–æ—á–Ω—ã–π —Ö–µ–Ω–¥–ª–µ—Ä
async def debug_all(update, context: ContextTypes.DEFAULT_TYPE):
    print(f"[DEBUG] –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {update.message.text}")


def main():
    # üîÅ 1. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å–∏–≥–Ω–∞–ª–æ–≤
    try:
        print("üîÅ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤ —Å–∏–≥–Ω–∞–ª–æ–≤ (TP/SL)...")
        update_logged_results()
        print("‚úÖ –õ–æ–≥ —Å–∏–≥–Ω–∞–ª–æ–≤ –æ–±–Ω–æ–≤–ª—ë–Ω.")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ update_logged_results: {e}")

    # üîç 2. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—Ü–µ–Ω–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    try:
        print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å–∏–≥–Ω–∞–ª–æ–≤ (AI)...")
        evaluate_all_signals()
        print("‚úÖ –û—Ü–µ–Ω–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ evaluate_all_signals: {e}")

    # ü§ñ 3. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram-–±–æ—Ç–∞
    app = (
        ApplicationBuilder()
        .token(TELEGRAM_BOT_TOKEN)
        .post_init(remove_webhook)
        .build()
    )

    # ‚úÖ 4. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥
    app.add_handler(CommandHandler("start", handle_start))
    app.add_handler(CommandHandler("help", handle_help))
    app.add_handler(CommandHandler("usage", handle_usage))
    app.add_handler(CommandHandler("signals", handle_signals))
    app.add_handler(CommandHandler("scalp_eth", handle_scalp_eth))
    app.add_handler(CommandHandler("scalp_btc", handle_scalp_btc))
    app.add_handler(CommandHandler("swing", handle_swing))
    app.add_handler(CommandHandler("news", handle_news))
    app.add_handler(CommandHandler("results", handle_results))
    app.add_handler(CommandHandler("evaluate", handle_evaluate))
    app.add_handler(CommandHandler("stats", handle_stats))
    app.add_handler(CommandHandler("altcoin_gem", handle_altcoin_gem))
    app.add_handler(MessageHandler(filters.ALL, debug_all))

    print("üìä Bot started. Awaiting commands in Telegram...")
    app.run_polling()


if __name__ == "__main__":
    main()
