from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
from performance_evaluator import evaluate_all_signals  # –¥–ª—è –∞–≤—Ç–æ–æ—Ü–µ–Ω–∫–∏
from dotenv import load_dotenv
import os
from telegram import Bot

load_dotenv()
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

# –§—É–Ω–∫—Ü–∏—è, –≤—ã–∑—ã–≤–∞–µ–º–∞—è –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –¥–æ polling
async def remove_webhook(app):
    await app.bot.delete_webhook(drop_pending_updates=True)
    print("‚úÖ Webhook —É–¥–∞–ª—ë–Ω.")

# –ò–º–ø–æ—Ä—Ç—ã —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤
from commands.start import handle_start
from commands.help import handle_help
from commands.usage import handle_usage
from commands.signals import handle_signals
from commands.scalp_eth import handle_scalp_eth
from commands.scalp_btc import handle_scalp_btc
from commands.swing import handle_swing
from commands.news import handle_news
from commands.results import handle_results  # –∫–æ–º–∞–Ω–¥–∞ /results
from commands.evaluate import handle_evaluate
from commands.stats import handle_stats  # –¥–æ–±–∞–≤—å –∏–º–ø–æ—Ä—Ç

# –û—Ç–ª–∞–¥–æ—á–Ω—ã–π —Ö–µ–Ω–¥–ª–µ—Ä
async def debug_all(update, context: ContextTypes.DEFAULT_TYPE):
    print(f"[DEBUG] –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {update.message.text}")


def main():
    # 1. –ê–≤—Ç–æ–æ—Ü–µ–Ω–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    try:
        print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å–∏–≥–Ω–∞–ª–æ–≤...")
        evaluate_all_signals()
        print("‚úÖ –ì–æ—Ç–æ–≤–æ.")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ–æ—Ü–µ–Ω–∫–µ —Å–∏–≥–Ω–∞–ª–æ–≤: {e}")

    # 2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
    # app = ApplicationBuilder().token(TELEGRAM_BOT_TOKEN).build()

 # 2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ —Å —É–¥–∞–ª–µ–Ω–∏–µ–º –≤–µ–±—Ö—É–∫–∞
    app = (
        ApplicationBuilder()
        .token(TELEGRAM_BOT_TOKEN)
        .post_init(remove_webhook)  # üëà –≤–æ—Ç –∑–¥–µ—Å—å
        .build()
    )

    # 3. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥
    app.add_handler(CommandHandler("start", handle_start))
    app.add_handler(CommandHandler("help", handle_help))
    app.add_handler(CommandHandler("usage", handle_usage))
    app.add_handler(CommandHandler("signals", handle_signals))
    app.add_handler(CommandHandler("scalp_eth", handle_scalp_eth))
    app.add_handler(CommandHandler("scalp_btc", handle_scalp_btc))
    app.add_handler(CommandHandler("swing", handle_swing))
    app.add_handler(CommandHandler("news", handle_news))
    app.add_handler(CommandHandler("results", handle_results))  # —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏–≤–Ω–æ—Å—Ç—å
    app.add_handler(CommandHandler("evaluate", handle_evaluate))
    app.add_handler(CommandHandler("stats", handle_stats))  # –¥–æ–±–∞–≤—å –ø–æ—Å–ª–µ –¥—Ä—É–≥–∏—Ö –∫–æ–º–∞–Ω–¥
            
    # 4. –û—Ç–ª–∞–¥–∫–∞ ‚Äî –ª—é–±–æ–π —Ç–µ–∫—Å—Ç
    app.add_handler(MessageHandler(filters.ALL, debug_all))

    print("üìä Bot started. Awaiting commands in Telegram...")
    app.run_polling()


if __name__ == "__main__":
    main()
